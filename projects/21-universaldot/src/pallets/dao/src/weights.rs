// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_dao
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-07-05, STEPS: `100`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:

// ./target/release/node-template

// benchmark

// --chain

// dev

// --execution

// wasm

// --wasm-execution

// compiled

// --pallet

// pallet_dao

// --extrinsic

// *

// --steps

// 100

// --repeat

// 50

// --output

// ./pallets/dao/src/weights.rs

// --template

// .maintain/frame-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_dao.
pub trait WeightInfo {
	
	fn create_vision(s: u32, ) -> Weight;
	
	fn remove_vision(s: u32, ) -> Weight;
	
	fn sign_vision(s: u32, ) -> Weight;
	
	fn unsign_vision(s: u32, ) -> Weight;
	
	fn create_organization(s: u32, ) -> Weight;
	
	fn update_organization(s: u32, ) -> Weight;
	
	fn transfer_ownership(s: u32, ) -> Weight;
	
	fn dissolve_organization(s: u32, ) -> Weight;
	
	fn add_members(s: u32, ) -> Weight;
	
	fn add_tasks(s: u32, ) -> Weight;
	
	fn remove_members(s: u32, ) -> Weight;
	
	fn remove_tasks(s: u32, ) -> Weight;
	
}

/// Weights for pallet_dao using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {

	
	
	// Storage: Dao Vision (r:1 w:1)
	
	// Storage: Dao VisionCount (r:1 w:1)
	
	fn create_vision(_s: u32, ) -> Weight {
		(17_863_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Vision (r:1 w:1)
	
	// Storage: Dao VisionCount (r:1 w:1)
	
	fn remove_vision(_s: u32, ) -> Weight {
		(19_219_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Vision (r:1 w:0)
	
	// Storage: Dao ApplicantsToOrganization (r:1 w:1)
	
	fn sign_vision(s: u32, ) -> Weight {
		(16_859_000 as Weight)
			
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(s as Weight))
			
			
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Vision (r:1 w:0)
	
	// Storage: Dao ApplicantsToOrganization (r:1 w:1)
	
	fn unsign_vision(_s: u32, ) -> Weight {
		(18_325_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	// Storage: Dao OrganizationCount (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did OwnerOf (r:1 w:1)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	// Storage: Dao MemberOf (r:0 w:1)
	
	// Storage: Dao Members (r:0 w:1)
	
	fn create_organization(_s: u32, ) -> Weight {
		(36_725_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	fn update_organization(s: u32, ) -> Weight {
		(18_799_000 as Weight)
			
			// Standard Error: 0
			.saturating_add((4_000 as Weight).saturating_mul(s as Weight))
			
			
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did OwnerOf (r:1 w:1)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn transfer_ownership(_s: u32, ) -> Weight {
		(33_999_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	// Storage: Dao OrganizationCount (r:1 w:1)
	
	// Storage: Dao MemberOf (r:1 w:1)
	
	// Storage: Dao Members (r:0 w:1)
	
	fn dissolve_organization(_s: u32, ) -> Weight {
		(24_295_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao Members (r:1 w:1)
	
	// Storage: Dao MemberOf (r:1 w:1)
	
	fn add_members(s: u32, ) -> Weight {
		(24_397_000 as Weight)
			
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(s as Weight))
			
			
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao OrganizationTasks (r:1 w:1)
	
	fn add_tasks(_s: u32, ) -> Weight {
		(20_453_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao Members (r:1 w:1)
	
	// Storage: Dao MemberOf (r:1 w:1)
	
	fn remove_members(_s: u32, ) -> Weight {
		(25_887_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao OrganizationTasks (r:1 w:1)
	
	fn remove_tasks(_s: u32, ) -> Weight {
		(20_913_000 as Weight)
			
			
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			
			
	}
	
}

// For backwards compatibility and tests
impl WeightInfo for () {
	
	
	// Storage: Dao Vision (r:1 w:1)
	
	// Storage: Dao VisionCount (r:1 w:1)
	
	fn create_vision(_s: u32, ) -> Weight {
		(17_863_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Vision (r:1 w:1)
	
	// Storage: Dao VisionCount (r:1 w:1)
	
	fn remove_vision(_s: u32, ) -> Weight {
		(19_219_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Vision (r:1 w:0)
	
	// Storage: Dao ApplicantsToOrganization (r:1 w:1)
	
	fn sign_vision(s: u32, ) -> Weight {
		(16_859_000 as Weight)
			
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(s as Weight))
			
			
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Vision (r:1 w:0)
	
	// Storage: Dao ApplicantsToOrganization (r:1 w:1)
	
	fn unsign_vision(_s: u32, ) -> Weight {
		(18_325_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	// Storage: Dao OrganizationCount (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did OwnerOf (r:1 w:1)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	// Storage: Dao MemberOf (r:0 w:1)
	
	// Storage: Dao Members (r:0 w:1)
	
	fn create_organization(_s: u32, ) -> Weight {
		(36_725_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(6 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	fn update_organization(s: u32, ) -> Weight {
		(18_799_000 as Weight)
			
			// Standard Error: 0
			.saturating_add((4_000 as Weight).saturating_mul(s as Weight))
			
			
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	// Storage: Timestamp Now (r:1 w:0)
	
	// Storage: Did OwnerOf (r:1 w:1)
	
	// Storage: Did UpdatedBy (r:0 w:1)
	
	fn transfer_ownership(_s: u32, ) -> Weight {
		(33_999_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:1)
	
	// Storage: Dao OrganizationCount (r:1 w:1)
	
	// Storage: Dao MemberOf (r:1 w:1)
	
	// Storage: Dao Members (r:0 w:1)
	
	fn dissolve_organization(_s: u32, ) -> Weight {
		(24_295_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao Members (r:1 w:1)
	
	// Storage: Dao MemberOf (r:1 w:1)
	
	fn add_members(s: u32, ) -> Weight {
		(24_397_000 as Weight)
			
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(s as Weight))
			
			
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao OrganizationTasks (r:1 w:1)
	
	fn add_tasks(_s: u32, ) -> Weight {
		(20_453_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao Members (r:1 w:1)
	
	// Storage: Dao MemberOf (r:1 w:1)
	
	fn remove_members(_s: u32, ) -> Weight {
		(25_887_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
			
			
	}
	
	
	// Storage: Dao Organizations (r:1 w:0)
	
	// Storage: Dao OrganizationTasks (r:1 w:1)
	
	fn remove_tasks(_s: u32, ) -> Weight {
		(20_913_000 as Weight)
			
			
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			
			
			
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
			
			
	}
	
}
